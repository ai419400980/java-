<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liangzi.blog.dao.AticleTypeMapper" >
  <resultMap id="BaseResultMap" type="com.liangzi.blog.model.base.AticleType" >
    <id column="at_id" property="atId" jdbcType="BIGINT" />
    <result column="at_type" property="atType" jdbcType="VARCHAR" />
    <result column="at_creat_time_change" property="atCreatTimeChange" jdbcType="VARCHAR" />
    <result column="at_memo" property="atMemo" jdbcType="VARCHAR" />
    <result column="at_creat_time" property="atCreatTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    at_id, at_type, at_creat_time_change, at_memo, at_creat_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liangzi.blog.model.base.AticleTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aticle_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from aticle_type
    where at_id = #{atId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from aticle_type
    where at_id = #{atId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liangzi.blog.model.base.AticleTypeExample" >
    delete from aticle_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liangzi.blog.model.base.AticleType" >
    insert into aticle_type (at_id, at_type, at_creat_time_change, 
      at_memo, at_creat_time)
    values (#{atId,jdbcType=BIGINT}, #{atType,jdbcType=VARCHAR}, #{atCreatTimeChange,jdbcType=VARCHAR}, 
      #{atMemo,jdbcType=VARCHAR}, #{atCreatTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.liangzi.blog.model.base.AticleType" >
    insert into aticle_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="atId != null" >
        at_id,
      </if>
      <if test="atType != null" >
        at_type,
      </if>
      <if test="atCreatTimeChange != null" >
        at_creat_time_change,
      </if>
      <if test="atMemo != null" >
        at_memo,
      </if>
      <if test="atCreatTime != null" >
        at_creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="atId != null" >
        #{atId,jdbcType=BIGINT},
      </if>
      <if test="atType != null" >
        #{atType,jdbcType=VARCHAR},
      </if>
      <if test="atCreatTimeChange != null" >
        #{atCreatTimeChange,jdbcType=VARCHAR},
      </if>
      <if test="atMemo != null" >
        #{atMemo,jdbcType=VARCHAR},
      </if>
      <if test="atCreatTime != null" >
        #{atCreatTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liangzi.blog.model.base.AticleTypeExample" resultType="java.lang.Integer" >
    select count(*) from aticle_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update aticle_type
    <set >
      <if test="record.atId != null" >
        at_id = #{record.atId,jdbcType=BIGINT},
      </if>
      <if test="record.atType != null" >
        at_type = #{record.atType,jdbcType=VARCHAR},
      </if>
      <if test="record.atCreatTimeChange != null" >
        at_creat_time_change = #{record.atCreatTimeChange,jdbcType=VARCHAR},
      </if>
      <if test="record.atMemo != null" >
        at_memo = #{record.atMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.atCreatTime != null" >
        at_creat_time = #{record.atCreatTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update aticle_type
    set at_id = #{record.atId,jdbcType=BIGINT},
      at_type = #{record.atType,jdbcType=VARCHAR},
      at_creat_time_change = #{record.atCreatTimeChange,jdbcType=VARCHAR},
      at_memo = #{record.atMemo,jdbcType=VARCHAR},
      at_creat_time = #{record.atCreatTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangzi.blog.model.base.AticleType" >
    update aticle_type
    <set >
      <if test="atType != null" >
        at_type = #{atType,jdbcType=VARCHAR},
      </if>
      <if test="atCreatTimeChange != null" >
        at_creat_time_change = #{atCreatTimeChange,jdbcType=VARCHAR},
      </if>
      <if test="atMemo != null" >
        at_memo = #{atMemo,jdbcType=VARCHAR},
      </if>
      <if test="atCreatTime != null" >
        at_creat_time = #{atCreatTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where at_id = #{atId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangzi.blog.model.base.AticleType" >
    update aticle_type
    set at_type = #{atType,jdbcType=VARCHAR},
      at_creat_time_change = #{atCreatTimeChange,jdbcType=VARCHAR},
      at_memo = #{atMemo,jdbcType=VARCHAR},
      at_creat_time = #{atCreatTime,jdbcType=TIMESTAMP}
    where at_id = #{atId,jdbcType=BIGINT}
  </update>
</mapper>